/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_2;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Heiner
 */
public class Configuracion extends javax.swing.JDialog {

    DefaultTableModel modeloTablaConfiguracion;
    Boolean iniciado;
    
    /**
     * Creates new form Configuracion
     * @param parent
     * @param modal
     * @param iniciado
     */
    public Configuracion(java.awt.Frame parent, boolean modal, Boolean iniciado) {
        super(parent, modal);
        initComponents();
        this.modeloTablaConfiguracion = (DefaultTableModel) jTableConfiguracion.getModel();
        this.iniciado = iniciado;
        cargarTablaConfiguracion();
        this.setLocationRelativeTo(parent);
    }
    
    /**
     * Carga a la tabla configuracion los pesos de la instrucciones establecidos...
     * ...en la clase TiempoInstrucciones.
     */
    private void cargarTablaConfiguracion(){
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.LOAD, 0, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.STORE, 1, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.MOV, 2, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.ADD, 3, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.SUB, 4, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.INC, 5, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.DEC, 6, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.JUMP, 7, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.CMP, 8, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.JEJNE, 9, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.POP, 10, 1);
        modeloTablaConfiguracion.setValueAt(TiempoInstrucciones.PARAM, 11, 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConfiguracion = new javax.swing.JTable();
        btCancelar = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuración");

        jTableConfiguracion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTableConfiguracion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"LOAD", null},
                {"STORE", null},
                {"MOV", null},
                {"ADD", null},
                {"SUB", null},
                {"INC", null},
                {"DEC", null},
                {"JUMP", null},
                {"CMP", null},
                {"JE/JNE", null},
                {"POP", null},
                {"PARAM", null}
            },
            new String [] {
                "Instrucción", "Peso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConfiguracion.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableConfiguracion);

        btCancelar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btGuardar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btGuardar.setText("Guardar");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Nota: Cuando modifica un valor presione enter para introducirlo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btGuardar)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGuardar)
                    .addComponent(btCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        if(!iniciado){ // Si no ha empezado a ejecutar procesos, entonces permito la modificación.
            /*
            0:loadTemp, 1:storeTemp, 2:movTemp, 3:addTemp,
            4:subTemp, 5:incTemp, 6:decTemp, 7:jumpTemp,
            8:cmpTemp, 9:jejneTemp, 10:popTemp, 11:paramTemp
            */
            int[] valoresTemporales = new int[12];
            Boolean nulo=false;
            Object valor;
            // Compruebo si algun campo es incorrecto.
            for(int i=0;i<12;i++){
                valor=modeloTablaConfiguracion.getValueAt(i, 1);
                if(valor==null){
                    // Obtengo el dato de la columna valor y la fila indicada por i.
                    String instruccion=(String)modeloTablaConfiguracion.getValueAt(i, 0);
                    nulo=true;
                    JOptionPane.showMessageDialog(this, "El valor \""+instruccion+"\" es incorrecto.", "Valor incorrecto",
                        JOptionPane.WARNING_MESSAGE);

                }else{
                    // Si no es nulo, guardo el valor en el arreglo.
                    valoresTemporales[i]=(Integer)valor;
                }
            }
            if(!nulo){
                // Si ningun valor es nulo, entonces guardo todos los cambios en las variables
                TiempoInstrucciones.LOAD=valoresTemporales[0];
                TiempoInstrucciones.STORE=valoresTemporales[1];
                TiempoInstrucciones.MOV=valoresTemporales[2];
                TiempoInstrucciones.ADD=valoresTemporales[3];
                TiempoInstrucciones.SUB=valoresTemporales[4];
                TiempoInstrucciones.INC=valoresTemporales[5];
                TiempoInstrucciones.DEC=valoresTemporales[6];
                TiempoInstrucciones.JUMP=valoresTemporales[7];
                TiempoInstrucciones.CMP=valoresTemporales[8];
                TiempoInstrucciones.JEJNE=valoresTemporales[9];
                TiempoInstrucciones.POP=valoresTemporales[10];
                TiempoInstrucciones.PARAM=valoresTemporales[11];
                this.dispose();
            }else{
                // Si algun valor es nulo, no guardo ningun cambio y muestro el mensaje.
                JOptionPane.showMessageDialog(this, "No se guardaron los cambios.", "Valores Incorrectos",
                    JOptionPane.WARNING_MESSAGE);
            }
        }else{// Si ya empezó a ejecutar procesos, entonces no se permite modificar.
            JOptionPane.showMessageDialog(this, "El programa ya está ejecutando procesos, no se pueden modificar los valores.", "No es válido modificar",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableConfiguracion;
    // End of variables declaration//GEN-END:variables
}
